# Generated by Django 3.2.16 on 2022-12-21 12:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_pound', models.BooleanField(default=False, verbose_name='pound status')),
                ('is_rescue', models.BooleanField(default=False, verbose_name='rescue status')),
                ('pound_official_name', models.CharField(default='To be populated', max_length=150)),
                ('rescue_official_name', models.CharField(default='To be populated', max_length=150)),
                ('county', models.IntegerField(choices=[(0, 'Antrim'), (1, 'Armagh'), (2, 'Carlow'), (3, 'Cavan'), (4, 'Clare'), (5, 'Cork'), (6, 'Derry'), (7, 'Donegal'), (8, 'Down'), (9, 'Dublin'), (10, 'Fermanagh'), (11, 'Galway'), (12, 'Kerry'), (13, 'Kildare'), (14, 'Kilkenny'), (15, 'Laois'), (16, 'Leitrim'), (17, 'Limerick'), (18, 'Longford'), (19, 'Louth'), (20, 'Mayo'), (21, 'Meath'), (22, 'Monaghan'), (23, 'Offaly'), (24, 'Roscommon'), (25, 'Sligo'), (26, 'Tipperary'), (27, 'Tyrone'), (28, 'Waterford'), (29, 'Westmeath'), (30, 'Wexford'), (31, 'Wicklow')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_added', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('dog_breed', models.CharField(max_length=150)),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')], default=0)),
                ('approx_age', models.CharField(max_length=50)),
                ('neutered', models.IntegerField(choices=[(0, 'Yes'), (1, 'No'), (2, 'Unknown')], default=2)),
                ('microchipped', models.IntegerField(choices=[(0, 'Yes'), (1, 'No'), (2, 'Unknown')], default=2)),
                ('circumstance', models.IntegerField(choices=[(0, 'Stray'), (1, 'Surrender'), (2, 'Seized'), (3, 'Other')], default=1)),
                ('pound_entry_date', models.DateField()),
                ('hold_date', models.DateField()),
                ('status', models.IntegerField(choices=[(0, 'Hold'), (1, 'Available'), (2, 'Booked'), (3, 'Transferred to Rescue'), (4, 'Rehomed'), (5, 'Reclaimed'), (6, 'PTS'), (7, 'Death Natural Causes'), (8, 'Booking Proposed')], default=0)),
                ('urgency', models.IntegerField(choices=[(0, 'Red'), (1, 'Amber'), (2, 'Green')], default=2)),
                ('pound', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pound_name', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-urgency', 'profile_added'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_date', models.DateField()),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('approved', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dog_booking', to='connector.profile')),
                ('rescue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rescue_name', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
